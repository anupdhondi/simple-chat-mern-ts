{"version":3,"sources":["components/Chat/index.tsx","components/Home/index.tsx","utility.ts","components/Login/index.tsx","components/Register/index.tsx","components/index.tsx","reportWebVitals.ts","index.tsx"],"names":["HOST","window","location","hostname","Chat","useState","chatMessage","setChatMessage","chatMessages","setChatMessages","wsRef","setWSRef","history","useHistory","useEffect","ws","WebSocket","localStorage","getItem","addEventListener","send","JSON","stringify","intent","count","once","alert","replace","event","message","payload","parse","error","processMessage","data","oldMessages","console","log","map","item","user","email","reverse","close","className","index","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Fragment","Typography","component","variant","color","TextField","onChange","e","target","value","multiline","rows","Button","onClick","readyState","OPEN","Home","Link","to","API_URL","apiCall","path","a","fetch","method","headers","body","then","t","json","res","Register","setEmail","password","setPassword","status","setItem","push","fullWidth","placeholder","label","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae445494.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Button, ListItem, ListItemAvatar, Avatar, ListItemText, Typography } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ntype Message = {\r\n  user: string;\r\n  message: string;\r\n  intent: \"chat\";\r\n};\r\n\r\nfunction processMessage(payload: string) {\r\n  try {\r\n    return JSON.parse(payload);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\nconst HOST = window.location.hostname + \":8080\";\r\n\r\nexport default function Chat() {\r\n  const [chatMessage, setChatMessage] = useState(\"\");\r\n  const [chatMessages, setChatMessages] = useState<Message[]>([]);\r\n  const [wsRef, setWSRef] = useState<null | WebSocket>(null);\r\n\r\n  const history = useHistory();\r\n\r\n  function sendMessage() {\r\n    if (wsRef?.readyState !== WebSocket.OPEN) {\r\n      // websocket not connected\r\n      return;\r\n    }\r\n\r\n    wsRef.send(JSON.stringify({ message: chatMessage, intent: \"chat\" }));\r\n    setChatMessage(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    const ws = new WebSocket(`ws://${HOST}/` + localStorage.getItem(\"token\"));\r\n    ws.addEventListener(\r\n      \"open\",\r\n      () => {\r\n        ws.send(\r\n          JSON.stringify({\r\n            intent: \"old-messages\",\r\n            count: 10,\r\n          })\r\n        );\r\n      },\r\n      { once: true }\r\n    );\r\n\r\n    ws.addEventListener(\"error\", () => {\r\n      alert(\"Please login first\");\r\n      history.replace(\"/login\");\r\n    });\r\n\r\n    ws.addEventListener(\"message\", (event) => {\r\n      const data = event.data;\r\n\r\n      const message: any = processMessage(data);\r\n\r\n      if (!message) return;\r\n\r\n      if (message.intent === \"chat\") {\r\n        setChatMessages((oldMessages) => {\r\n          return [...oldMessages, message as Message];\r\n        });\r\n      } else if (message.intent === \"old-messages\") {\r\n        console.log(message.data, \"are the older messages\");\r\n        setChatMessages(\r\n          message.data\r\n            .map((item: any) => {\r\n              return {\r\n                user: item.email,\r\n                message: item.message,\r\n              };\r\n            })\r\n            .reverse()\r\n        );\r\n      }\r\n    });\r\n\r\n    setWSRef(ws);\r\n\r\n    return () => {\r\n      ws.close();\r\n    };\r\n  }, [history]);\r\n\r\n  // TODO: Add another action which loads more messages\r\n\r\n  // 1. another click handler for that button\r\n  // 2. Should extract the smallest date of current messages\r\n  // 3. Should send a new websocket request with old-messages but with date as the property // date as well as count\r\n\r\n  return (\r\n    <div>\r\n      <h1>Chat Page</h1>\r\n      <div className=\"chat-box\">\r\n        {chatMessages.map((message, index) => {\r\n          return (\r\n            <ListItem alignItems=\"flex-start\" key={index}>\r\n              <ListItemAvatar>\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={message.user}\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                      {message.message}\r\n                    </Typography>\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <TextField onChange={(e) => setChatMessage(e.target.value)} value={chatMessage} multiline rows={2} variant=\"outlined\" color=\"primary\" />\r\n\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={sendMessage}>\r\n        Send Message\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Simple Chat App</h1>\r\n        <div className=\"buttons\">\r\n          <Button color=\"secondary\" variant=\"contained\" component={Link} to=\"/login\">\r\n            Login\r\n          </Button>\r\n          <Button color=\"primary\" variant=\"contained\" component={Link} to=\"/register\">\r\n            Register\r\n          </Button>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n","export const IS_DEVELOPMENT = window.location.hostname === \"localhost\";\r\nexport const IS_PRODUCTION = !IS_DEVELOPMENT;\r\n\r\nconst API_URL = IS_PRODUCTION ? \"\" : \"http://localhost:5000\";\r\n\r\nexport async function apiCall(path: string, payload: { [key: string]: any }) {\r\n  const res = await fetch(`${API_URL}${path}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": localStorage.getItem(\"token\") || \"\",\r\n    },\r\n    body: JSON.stringify(payload),\r\n  }).then((t) => t.json());\r\n\r\n  return res;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport \"./style.css\";\r\nimport { apiCall } from \"../../utility\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Register() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  async function loginUser() {\r\n    const res = await apiCall(\"/api/login\", { email, password });\r\n\r\n    if (res.status === \"ok\") {\r\n      // TODO: Bad practice -> refresh tokens\r\n      localStorage.setItem(\"token\", res.data);\r\n      alert(\"You are logged in\");\r\n      history.push(\"/chat\");\r\n    } else {\r\n      alert(res.error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <h1>Login</h1>\r\n      <form className=\"register-fields\">\r\n        <TextField\r\n          fullWidth\r\n          placeholder=\"you@awesome.com\"\r\n          label=\"Your Email\"\r\n          value={email}\r\n          onChange={(e: any) => setEmail(e.target.value)}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          value={password}\r\n          onChange={(e: any) => setPassword(e.target.value)}\r\n          placeholder=\"p@$$w0rd\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n        />\r\n        <Button color=\"primary\" variant=\"contained\" onClick={loginUser}>\r\n          Login\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nimport \"./style.css\";\r\nimport { apiCall } from \"../../utility\";\r\n\r\nexport default function Register() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  async function registerUser() {\r\n    const res = await apiCall(\"/api/register\", { email, password });\r\n    console.log(res);\r\n  }\r\n  return (\r\n    <div className=\"form\">\r\n      <h1>Register</h1>\r\n      <form className=\"register-fields\">\r\n        <TextField\r\n          fullWidth\r\n          placeholder=\"you@awesome.com\"\r\n          label=\"Your Email\"\r\n          value={email}\r\n          onChange={(e: any) => setEmail(e.target.value)}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          value={password}\r\n          onChange={(e: any) => setPassword(e.target.value)}\r\n          placeholder=\"p@$$w0rd\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n        />\r\n        <Button color=\"primary\" variant=\"contained\" onClick={registerUser}>\r\n          Register\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Chat from \"./Chat\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/login\" exact>\n          <Login />\n        </Route>\n        <Route path=\"/register\" exact>\n          <Register />\n        </Route>\n        <Route path=\"/chat\" exact>\n          <Chat />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}